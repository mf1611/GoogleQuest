{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"},"colab":{"name":"99_Torch_base","provenance":[{"file_id":"1DNFMRK9UQsAjXko7bJJZwUh_6niUSHcC","timestamp":1580173595713},{"file_id":"1-4bVyplvvSuyPB6-soncICDgu8K9Oi-6","timestamp":1579230557293}],"collapsed_sections":[]},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"6T6HUtB5eorj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":125},"outputId":"bd06dd5a-9c44-40a1-9aa9-b086a867ac2d","executionInfo":{"status":"ok","timestamp":1580205717664,"user_tz":-540,"elapsed":34612,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uvK9IDYaOP_b","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import numpy as np\n","import math\n","import matplotlib.pyplot as plt\n","import os, sys, gc, random, multiprocessing, glob, time\n","\n","DATA_DIR = '/content/drive/My Drive/Colab Notebooks/GoogleQuest/input/google-quest-challenge'\n","# DATA_DIR = '../input/google-quest-challenge'\n","# DATA_DIR = 'D:/project/ICF_AutoCapsule_disabled/kaggle/google-quest-challenge'\n","# BERT_DIR = 'D:/project/ICF_AutoCapsule_disabled/BERT'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"S4jYDD13OP_o","colab_type":"code","colab":{}},"source":["# !pip install ../input/sacremoses/sacremoses-master/\n","# !pip install ../input/transformers/transformers-master/"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xst4_Y1Xer4Y","colab_type":"code","outputId":"ad1d38af-284a-456d-c614-325af771bbb4","executionInfo":{"status":"ok","timestamp":1580205739548,"user_tz":-540,"elapsed":13089,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":781}},"source":["!pip install transformers\n","!pip install flashtext"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Collecting transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/50/10/aeefced99c8a59d828a92cc11d213e2743212d3641c87c82d61b035a7d5c/transformers-2.3.0-py3-none-any.whl (447kB)\n","\u001b[K     |████████████████████████████████| 450kB 9.4MB/s \n","\u001b[?25hCollecting sentencepiece\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/74/f4/2d5214cbf13d06e7cb2c20d84115ca25b53ea76fa1f0ade0e3c9749de214/sentencepiece-0.1.85-cp36-cp36m-manylinux1_x86_64.whl (1.0MB)\n","\u001b[K     |████████████████████████████████| 1.0MB 46.2MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from transformers) (4.28.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from transformers) (2.21.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from transformers) (1.17.5)\n","Requirement already satisfied: boto3 in /usr/local/lib/python3.6/dist-packages (from transformers) (1.10.47)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.6/dist-packages (from transformers) (2019.12.20)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a6/b4/7a41d630547a4afd58143597d5a49e07bfd4c42914d8335b2a5657efc14b/sacremoses-0.0.38.tar.gz (860kB)\n","\u001b[K     |████████████████████████████████| 870kB 29.9MB/s \n","\u001b[?25hRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (2019.11.28)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (2.8)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: jmespath<1.0.0,>=0.7.1 in /usr/local/lib/python3.6/dist-packages (from boto3->transformers) (0.9.4)\n","Requirement already satisfied: s3transfer<0.3.0,>=0.2.0 in /usr/local/lib/python3.6/dist-packages (from boto3->transformers) (0.2.1)\n","Requirement already satisfied: botocore<1.14.0,>=1.13.47 in /usr/local/lib/python3.6/dist-packages (from boto3->transformers) (1.13.47)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers) (1.12.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers) (7.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers) (0.14.1)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1; python_version >= \"2.7\" in /usr/local/lib/python3.6/dist-packages (from botocore<1.14.0,>=1.13.47->boto3->transformers) (2.6.1)\n","Requirement already satisfied: docutils<0.16,>=0.10 in /usr/local/lib/python3.6/dist-packages (from botocore<1.14.0,>=1.13.47->boto3->transformers) (0.15.2)\n","Building wheels for collected packages: sacremoses\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.38-cp36-none-any.whl size=884629 sha256=d7df94d8236c14983a3cd152f4bf8b296537832d1c81b4e11e5035dfc2a95280\n","  Stored in directory: /root/.cache/pip/wheels/6d/ec/1a/21b8912e35e02741306f35f66c785f3afe94de754a0eaf1422\n","Successfully built sacremoses\n","Installing collected packages: sentencepiece, sacremoses, transformers\n","Successfully installed sacremoses-0.0.38 sentencepiece-0.1.85 transformers-2.3.0\n","Collecting flashtext\n","  Downloading https://files.pythonhosted.org/packages/81/d8/2cd0656eae456d615c2f1efbcae8dfca2cb871a31f34ba8925aba47d5e09/flashtext-2.7.tar.gz\n","Building wheels for collected packages: flashtext\n","  Building wheel for flashtext (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for flashtext: filename=flashtext-2.7-py2.py3-none-any.whl size=9298 sha256=1fb21042160efc4b01e09b77515fb3559dc23ec94ee6d0f1b55e6c6cd49df4d4\n","  Stored in directory: /root/.cache/pip/wheels/37/db/d7/fe74f7cb8e5c3afed90fe6f4967c933a6f13d81ab6b3d3128c\n","Successfully built flashtext\n","Installing collected packages: flashtext\n","Successfully installed flashtext-2.7\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OW9r1DNjOP_z","colab_type":"code","outputId":"21ac3e9e-4ef8-4f37-f460-569e67db8482","executionInfo":{"status":"ok","timestamp":1580205743925,"user_tz":-540,"elapsed":16299,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":81}},"source":["import torch\n","import torch.nn.functional as F\n","from torch import nn\n","from torch.utils import data\n","from torch.utils.data import DataLoader, Dataset\n","\n","#from ml_stratifiers import MultilabelStratifiedShuffleSplit, MultilabelStratifiedKFold\n","from sklearn.model_selection import KFold, StratifiedKFold, GroupKFold\n","from sklearn.utils import shuffle\n","from sklearn.preprocessing import LabelEncoder\n","\n","from scipy.stats import spearmanr\n","\n","import transformers\n","from transformers import (\n","    BertTokenizer, BertModel, BertForSequenceClassification, BertConfig,\n","    WEIGHTS_NAME, CONFIG_NAME, AdamW, get_linear_schedule_with_warmup, \n","    get_cosine_schedule_with_warmup,\n",")\n","\n","from tqdm import tqdm\n","print(transformers.__version__)"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["2.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gQsu1MpOOQAA","colab_type":"code","colab":{}},"source":["## Make results reproducible .Else noone will believe you .\n","import random\n","\n","def seed_everything(seed: int):\n","    random.seed(seed)\n","    os.environ[\"PYTHONHASHSEED\"] = str(seed)\n","    np.random.seed(seed)\n","    torch.manual_seed(seed)\n","    torch.cuda.manual_seed(seed)\n","    torch.backends.cudnn.deterministic = True"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kegkamk4OQAO","colab_type":"code","colab":{}},"source":["class PipeLineConfig:\n","    def __init__(self, lr, warmup, epochs, patience, batch_size, seed, name, question_weight,answer_weight,fold,train):\n","        self.lr = lr\n","        self.warmup = warmup\n","        self.epochs = epochs\n","        self.patience = patience\n","        self.batch_size = batch_size\n","        self.seed = seed\n","        self.name = name\n","        self.question_weight = question_weight\n","        self.answer_weight =answer_weight\n","        self.fold = fold\n","        self.train = train"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IBzmdbwYOQAY","colab_type":"code","colab":{}},"source":["config = PipeLineConfig(lr=1e-5, \\\n","                        warmup=0.01, \\\n","                        epochs=4, \\\n","                        patience=3, \\\n","                        batch_size=8, \\\n","                        seed=42, \\\n","                        name='reModel', \\\n","                        question_weight=0.5, \\\n","                        answer_weight=0.5, \\\n","                        fold=5, \\\n","                        train=True\n","                       )"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nBjN2cdKOQAh","colab_type":"code","colab":{}},"source":["seed_everything(config.seed)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DjOYABYwOQAr","colab_type":"code","outputId":"57525fca-96e6-483f-8b34-2e2fd0a95006","executionInfo":{"status":"ok","timestamp":1580205743933,"user_tz":-540,"elapsed":13416,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","#device = 'cpu'\n","print(device)"],"execution_count":10,"outputs":[{"output_type":"stream","text":["cpu\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RrECgPr6OQA4","colab_type":"code","outputId":"7d2f7c05-6bdb-4c13-ff18-9e773d8625c3","executionInfo":{"status":"ok","timestamp":1580205745656,"user_tz":-540,"elapsed":14624,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":219}},"source":["sub = pd.read_csv(f'{DATA_DIR}/sample_submission.csv')\n","sub.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>qa_id</th>\n","      <th>question_asker_intent_understanding</th>\n","      <th>question_body_critical</th>\n","      <th>question_conversational</th>\n","      <th>question_expect_short_answer</th>\n","      <th>question_fact_seeking</th>\n","      <th>question_has_commonly_accepted_answer</th>\n","      <th>question_interestingness_others</th>\n","      <th>question_interestingness_self</th>\n","      <th>question_multi_intent</th>\n","      <th>question_not_really_a_question</th>\n","      <th>question_opinion_seeking</th>\n","      <th>question_type_choice</th>\n","      <th>question_type_compare</th>\n","      <th>question_type_consequence</th>\n","      <th>question_type_definition</th>\n","      <th>question_type_entity</th>\n","      <th>question_type_instructions</th>\n","      <th>question_type_procedure</th>\n","      <th>question_type_reason_explanation</th>\n","      <th>question_type_spelling</th>\n","      <th>question_well_written</th>\n","      <th>answer_helpful</th>\n","      <th>answer_level_of_information</th>\n","      <th>answer_plausible</th>\n","      <th>answer_relevance</th>\n","      <th>answer_satisfaction</th>\n","      <th>answer_type_instructions</th>\n","      <th>answer_type_procedure</th>\n","      <th>answer_type_reason_explanation</th>\n","      <th>answer_well_written</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","      <td>0.00308</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","      <td>0.00448</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>70</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","      <td>0.00673</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>132</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","      <td>0.01401</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>200</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","      <td>0.02074</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   qa_id  ...  answer_well_written\n","0     39  ...              0.00308\n","1     46  ...              0.00448\n","2     70  ...              0.00673\n","3    132  ...              0.01401\n","4    200  ...              0.02074\n","\n","[5 rows x 31 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"FUZFPsyDOQBB","colab_type":"code","outputId":"e923a35f-7816-4747-a87d-c714642e0d14","executionInfo":{"status":"ok","timestamp":1580205745658,"user_tz":-540,"elapsed":13649,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":549}},"source":["target_columns = sub.columns.values[1:].tolist()\n","target_columns"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['question_asker_intent_understanding',\n"," 'question_body_critical',\n"," 'question_conversational',\n"," 'question_expect_short_answer',\n"," 'question_fact_seeking',\n"," 'question_has_commonly_accepted_answer',\n"," 'question_interestingness_others',\n"," 'question_interestingness_self',\n"," 'question_multi_intent',\n"," 'question_not_really_a_question',\n"," 'question_opinion_seeking',\n"," 'question_type_choice',\n"," 'question_type_compare',\n"," 'question_type_consequence',\n"," 'question_type_definition',\n"," 'question_type_entity',\n"," 'question_type_instructions',\n"," 'question_type_procedure',\n"," 'question_type_reason_explanation',\n"," 'question_type_spelling',\n"," 'question_well_written',\n"," 'answer_helpful',\n"," 'answer_level_of_information',\n"," 'answer_plausible',\n"," 'answer_relevance',\n"," 'answer_satisfaction',\n"," 'answer_type_instructions',\n"," 'answer_type_procedure',\n"," 'answer_type_reason_explanation',\n"," 'answer_well_written']"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"BOiPYRDWOQBM","colab_type":"code","outputId":"cfcb1796-4590-417e-90fe-a354f07170b7","executionInfo":{"status":"ok","timestamp":1580205746628,"user_tz":-540,"elapsed":13939,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":610}},"source":["train = pd.read_csv(f'{DATA_DIR}/train.csv')\n","train.head()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>qa_id</th>\n","      <th>question_title</th>\n","      <th>question_body</th>\n","      <th>question_user_name</th>\n","      <th>question_user_page</th>\n","      <th>answer</th>\n","      <th>answer_user_name</th>\n","      <th>answer_user_page</th>\n","      <th>url</th>\n","      <th>category</th>\n","      <th>host</th>\n","      <th>question_asker_intent_understanding</th>\n","      <th>question_body_critical</th>\n","      <th>question_conversational</th>\n","      <th>question_expect_short_answer</th>\n","      <th>question_fact_seeking</th>\n","      <th>question_has_commonly_accepted_answer</th>\n","      <th>question_interestingness_others</th>\n","      <th>question_interestingness_self</th>\n","      <th>question_multi_intent</th>\n","      <th>question_not_really_a_question</th>\n","      <th>question_opinion_seeking</th>\n","      <th>question_type_choice</th>\n","      <th>question_type_compare</th>\n","      <th>question_type_consequence</th>\n","      <th>question_type_definition</th>\n","      <th>question_type_entity</th>\n","      <th>question_type_instructions</th>\n","      <th>question_type_procedure</th>\n","      <th>question_type_reason_explanation</th>\n","      <th>question_type_spelling</th>\n","      <th>question_well_written</th>\n","      <th>answer_helpful</th>\n","      <th>answer_level_of_information</th>\n","      <th>answer_plausible</th>\n","      <th>answer_relevance</th>\n","      <th>answer_satisfaction</th>\n","      <th>answer_type_instructions</th>\n","      <th>answer_type_procedure</th>\n","      <th>answer_type_reason_explanation</th>\n","      <th>answer_well_written</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>What am I losing when using extension tubes in...</td>\n","      <td>After playing around with macro photography on...</td>\n","      <td>ysap</td>\n","      <td>https://photo.stackexchange.com/users/1024</td>\n","      <td>I just got extension tubes, so here's the skin...</td>\n","      <td>rfusca</td>\n","      <td>https://photo.stackexchange.com/users/1917</td>\n","      <td>http://photo.stackexchange.com/questions/9169/...</td>\n","      <td>LIFE_ARTS</td>\n","      <td>photo.stackexchange.com</td>\n","      <td>1.000000</td>\n","      <td>0.333333</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.800000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>What is the distinction between a city and a s...</td>\n","      <td>I am trying to understand what kinds of places...</td>\n","      <td>russellpierce</td>\n","      <td>https://rpg.stackexchange.com/users/8774</td>\n","      <td>It might be helpful to look into the definitio...</td>\n","      <td>Erik Schmidt</td>\n","      <td>https://rpg.stackexchange.com/users/1871</td>\n","      <td>http://rpg.stackexchange.com/questions/47820/w...</td>\n","      <td>CULTURE</td>\n","      <td>rpg.stackexchange.com</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.444444</td>\n","      <td>0.444444</td>\n","      <td>0.666667</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.888889</td>\n","      <td>0.888889</td>\n","      <td>0.555556</td>\n","      <td>0.888889</td>\n","      <td>0.888889</td>\n","      <td>0.666667</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.666667</td>\n","      <td>0.888889</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Maximum protusion length for through-hole comp...</td>\n","      <td>I'm working on a PCB that has through-hole com...</td>\n","      <td>Joe Baker</td>\n","      <td>https://electronics.stackexchange.com/users/10157</td>\n","      <td>Do you even need grooves?  We make several pro...</td>\n","      <td>Dwayne Reid</td>\n","      <td>https://electronics.stackexchange.com/users/64754</td>\n","      <td>http://electronics.stackexchange.com/questions...</td>\n","      <td>SCIENCE</td>\n","      <td>electronics.stackexchange.com</td>\n","      <td>0.888889</td>\n","      <td>0.666667</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>0.444444</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.777778</td>\n","      <td>0.777778</td>\n","      <td>0.555556</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>1.000000</td>\n","      <td>0.888889</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Can an affidavit be used in Beit Din?</td>\n","      <td>An affidavit, from what i understand, is basic...</td>\n","      <td>Scimonster</td>\n","      <td>https://judaism.stackexchange.com/users/5151</td>\n","      <td>Sending an \"affidavit\" it is a dispute between...</td>\n","      <td>Y     e     z</td>\n","      <td>https://judaism.stackexchange.com/users/4794</td>\n","      <td>http://judaism.stackexchange.com/questions/551...</td>\n","      <td>CULTURE</td>\n","      <td>judaism.stackexchange.com</td>\n","      <td>0.888889</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.444444</td>\n","      <td>0.444444</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.888889</td>\n","      <td>0.833333</td>\n","      <td>0.333333</td>\n","      <td>0.833333</td>\n","      <td>1.000000</td>\n","      <td>0.800000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>How do you make a binary image in Photoshop?</td>\n","      <td>I am trying to make a binary image. I want mor...</td>\n","      <td>leigero</td>\n","      <td>https://graphicdesign.stackexchange.com/users/...</td>\n","      <td>Check out Image Trace in Adobe Illustrator. \\n...</td>\n","      <td>q2ra</td>\n","      <td>https://graphicdesign.stackexchange.com/users/...</td>\n","      <td>http://graphicdesign.stackexchange.com/questio...</td>\n","      <td>LIFE_ARTS</td>\n","      <td>graphicdesign.stackexchange.com</td>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.800000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   qa_id  ... answer_well_written\n","0      0  ...            1.000000\n","1      1  ...            0.888889\n","2      2  ...            0.888889\n","3      3  ...            1.000000\n","4      5  ...            1.000000\n","\n","[5 rows x 41 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"khOj2PbNOQBW","colab_type":"code","outputId":"a0af537b-c403-41a6-82b2-d609ab37de07","executionInfo":{"status":"ok","timestamp":1580205748201,"user_tz":-540,"elapsed":14906,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}},"colab":{"base_uri":"https://localhost:8080/","height":508}},"source":["test = pd.read_csv(f'{DATA_DIR}/test.csv')\n","test.head()"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>qa_id</th>\n","      <th>question_title</th>\n","      <th>question_body</th>\n","      <th>question_user_name</th>\n","      <th>question_user_page</th>\n","      <th>answer</th>\n","      <th>answer_user_name</th>\n","      <th>answer_user_page</th>\n","      <th>url</th>\n","      <th>category</th>\n","      <th>host</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>Will leaving corpses lying around upset my pri...</td>\n","      <td>I see questions/information online about how t...</td>\n","      <td>Dylan</td>\n","      <td>https://gaming.stackexchange.com/users/64471</td>\n","      <td>There is no consequence for leaving corpses an...</td>\n","      <td>Nelson868</td>\n","      <td>https://gaming.stackexchange.com/users/97324</td>\n","      <td>http://gaming.stackexchange.com/questions/1979...</td>\n","      <td>CULTURE</td>\n","      <td>gaming.stackexchange.com</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>Url link to feature image in the portfolio</td>\n","      <td>I am new to Wordpress. i have issue with Featu...</td>\n","      <td>Anu</td>\n","      <td>https://wordpress.stackexchange.com/users/72927</td>\n","      <td>I think it is possible with custom fields.\\n\\n...</td>\n","      <td>Irina</td>\n","      <td>https://wordpress.stackexchange.com/users/27233</td>\n","      <td>http://wordpress.stackexchange.com/questions/1...</td>\n","      <td>TECHNOLOGY</td>\n","      <td>wordpress.stackexchange.com</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>70</td>\n","      <td>Is accuracy, recoil or bullet spread affected ...</td>\n","      <td>To experiment I started a bot game, toggled in...</td>\n","      <td>Konsta</td>\n","      <td>https://gaming.stackexchange.com/users/37545</td>\n","      <td>You do not have armour in the screenshots. Thi...</td>\n","      <td>Damon Smithies</td>\n","      <td>https://gaming.stackexchange.com/users/70641</td>\n","      <td>http://gaming.stackexchange.com/questions/2154...</td>\n","      <td>CULTURE</td>\n","      <td>gaming.stackexchange.com</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>132</td>\n","      <td>Suddenly got an I/O error from my external HDD</td>\n","      <td>I have used my Raspberry Pi as a torrent-serve...</td>\n","      <td>robbannn</td>\n","      <td>https://raspberrypi.stackexchange.com/users/17341</td>\n","      <td>Your Western Digital hard drive is disappearin...</td>\n","      <td>HeatfanJohn</td>\n","      <td>https://raspberrypi.stackexchange.com/users/1311</td>\n","      <td>http://raspberrypi.stackexchange.com/questions...</td>\n","      <td>TECHNOLOGY</td>\n","      <td>raspberrypi.stackexchange.com</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>200</td>\n","      <td>Passenger Name - Flight Booking Passenger only...</td>\n","      <td>I have bought Delhi-London return flights for ...</td>\n","      <td>Amit</td>\n","      <td>https://travel.stackexchange.com/users/29089</td>\n","      <td>I called two persons who work for Saudia (tick...</td>\n","      <td>Nean Der Thal</td>\n","      <td>https://travel.stackexchange.com/users/10051</td>\n","      <td>http://travel.stackexchange.com/questions/4704...</td>\n","      <td>CULTURE</td>\n","      <td>travel.stackexchange.com</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   qa_id  ...                           host\n","0     39  ...       gaming.stackexchange.com\n","1     46  ...    wordpress.stackexchange.com\n","2     70  ...       gaming.stackexchange.com\n","3    132  ...  raspberrypi.stackexchange.com\n","4    200  ...       travel.stackexchange.com\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"zQmOqcpsml94","colab_type":"text"},"source":["## postprocessing"]},{"cell_type":"code","metadata":{"id":"4qZ994a2mlZP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"57b0bc9e-cc50-42cf-b32e-93799add521f","executionInfo":{"status":"ok","timestamp":1580205855150,"user_tz":-540,"elapsed":618,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["for col in target_columns:\n","    print('-'*60)\n","    print(col)\n","    print(train[col].unique())"],"execution_count":17,"outputs":[{"output_type":"stream","text":["------------------------------------------------------------\n","question_asker_intent_understanding\n","[1.         0.88888889 0.83333333 0.77777778 0.66666667 0.55555556\n"," 0.33333333 0.44444444 0.5       ]\n","------------------------------------------------------------\n","question_body_critical\n","[0.33333333 1.         0.66666667 0.77777778 0.44444444 0.55555556\n"," 0.88888889 0.5        0.83333333]\n","------------------------------------------------------------\n","question_conversational\n","[0.         0.66666667 0.33333333 0.5        1.        ]\n","------------------------------------------------------------\n","question_expect_short_answer\n","[0.         0.5        1.         0.33333333 0.66666667]\n","------------------------------------------------------------\n","question_fact_seeking\n","[0.         1.         0.33333333 0.66666667 0.5       ]\n","------------------------------------------------------------\n","question_has_commonly_accepted_answer\n","[0.         1.         0.66666667 0.5        0.33333333]\n","------------------------------------------------------------\n","question_interestingness_others\n","[1.         0.44444444 0.66666667 0.88888889 0.77777778 0.55555556\n"," 0.5        0.33333333 0.83333333]\n","------------------------------------------------------------\n","question_interestingness_self\n","[1.         0.44444444 0.66666667 0.33333333 0.77777778 0.55555556\n"," 0.88888889 0.5        0.83333333]\n","------------------------------------------------------------\n","question_multi_intent\n","[0.         0.66666667 0.33333333 1.         0.5       ]\n","------------------------------------------------------------\n","question_not_really_a_question\n","[0.         0.33333333 0.5        0.66666667 1.        ]\n","------------------------------------------------------------\n","question_opinion_seeking\n","[1.         0.         0.33333333 0.5        0.66666667]\n","------------------------------------------------------------\n","question_type_choice\n","[0.         0.66666667 1.         0.33333333 0.5       ]\n","------------------------------------------------------------\n","question_type_compare\n","[0.         0.66666667 0.33333333 1.         0.5       ]\n","------------------------------------------------------------\n","question_type_consequence\n","[0.         0.66666667 0.33333333 1.         0.5       ]\n","------------------------------------------------------------\n","question_type_definition\n","[0.         0.33333333 0.5        1.         0.66666667]\n","------------------------------------------------------------\n","question_type_entity\n","[0.         0.66666667 0.33333333 0.5        1.        ]\n","------------------------------------------------------------\n","question_type_instructions\n","[1.         0.         0.66666667 0.33333333 0.5       ]\n","------------------------------------------------------------\n","question_type_procedure\n","[0.         0.33333333 0.5        0.66666667 1.        ]\n","------------------------------------------------------------\n","question_type_reason_explanation\n","[0.         0.33333333 1.         0.66666667 0.5       ]\n","------------------------------------------------------------\n","question_type_spelling\n","[0.         0.66666667 0.33333333]\n","------------------------------------------------------------\n","question_well_written\n","[1.         0.88888889 0.77777778 0.83333333 0.66666667 0.33333333\n"," 0.55555556 0.44444444 0.5       ]\n","------------------------------------------------------------\n","answer_helpful\n","[1.         0.88888889 0.77777778 0.83333333 0.66666667 0.55555556\n"," 0.33333333 0.44444444 0.5       ]\n","------------------------------------------------------------\n","answer_level_of_information\n","[0.66666667 0.55555556 0.33333333 0.77777778 0.5        0.83333333\n"," 1.         0.44444444 0.88888889]\n","------------------------------------------------------------\n","answer_plausible\n","[1.         0.88888889 0.83333333 0.66666667 0.77777778 0.33333333\n"," 0.5        0.55555556 0.44444444]\n","------------------------------------------------------------\n","answer_relevance\n","[1.         0.88888889 0.66666667 0.77777778 0.83333333 0.44444444\n"," 0.55555556 0.33333333 0.5       ]\n","------------------------------------------------------------\n","answer_satisfaction\n","[0.8        0.66666667 0.73333333 0.86666667 0.26666667 0.53333333\n"," 0.6        1.         0.9        0.93333333 0.5        0.7\n"," 0.4        0.2        0.46666667 0.33333333 0.3       ]\n","------------------------------------------------------------\n","answer_type_instructions\n","[1.         0.         0.66666667 0.33333333 0.5       ]\n","------------------------------------------------------------\n","answer_type_procedure\n","[0.         0.33333333 0.66666667 1.         0.5       ]\n","------------------------------------------------------------\n","answer_type_reason_explanation\n","[0.         0.66666667 1.         0.33333333 0.5       ]\n","------------------------------------------------------------\n","answer_well_written\n","[1.         0.88888889 0.77777778 0.83333333 0.66666667 0.5\n"," 0.55555556 0.44444444 0.33333333]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Me-XQKupmk0j","colab_type":"code","colab":{}},"source":["dict_target_class= {\n","'question_asker_intent_understanding':\n","[1.,0.88888889, 0.83333333,0.77777778, 0.66666667, 0.55555556, 0.33333333, 0.44444444, 0.5], \n","'question_body_critical':\n","[0.33333333, 1., 0.66666667, 0.77777778, 0.44444444, 0.55555556, 0.88888889, 0.5, 0.83333333],\n","'question_conversational': \n","[0., 0.66666667, 0.33333333, 0.5, 1.],\n","'question_expect_short_answer':\n","[0., 0.5, 1., 0.33333333, 0.66666667],\n","'question_fact_seeking':\n","[0., 1., 0.33333333, 0.66666667, 0.5],\n","'question_has_commonly_accepted_answer':\n","[0., 1., 0.66666667, 0.5, 0.33333333],\n","'question_interestingness_others':\n","[1., 0.44444444, 0.66666667, 0.88888889, 0.77777778, 0.55555556, 0.5, 0.33333333, 0.83333333],\n","'question_interestingness_self':\n","[1., 0.44444444, 0.66666667, 0.33333333, 0.77777778, 0.55555556, 0.88888889, 0.5, 0.83333333],\n","'question_multi_intent':\n","[0., 0.66666667, 0.33333333, 1., 0.5],\n","'question_not_really_a_question':\n","[0., 0.33333333, 0.5, 0.66666667, 1.],\n","'question_opinion_seeking':\n","[1., 0., 0.33333333, 0.5, 0.66666667],\n","'question_type_choice':\n","[0., 0.66666667, 1., 0.33333333, 0.5],\n","'question_type_compare':\n","[0., 0.66666667, 0.33333333, 1., 0.5],\n","'question_type_consequence':\n","[0., 0.66666667, 0.33333333, 1., 0.5],\n","'question_type_definition':\n","[0., 0.33333333, 0.5, 1., 0.66666667],\n","'question_type_entity':\n","[0., 0.66666667, 0.33333333, 0.5, 1.],\n","'question_type_instructions':\n","[1., 0., 0.66666667, 0.33333333, 0.5],\n","'question_type_procedure':\n","[0., 0.33333333, 0.5, 0.66666667, 1.],\n","'question_type_reason_explanation':\n","[0., 0.33333333, 1., 0.66666667, 0.5],\n","'question_type_spelling':\n","[0., 0.66666667, 0.33333333],\n","'question_well_written':\n","[1., 0.88888889, 0.77777778, 0.83333333, 0.66666667, 0.33333333, 0.55555556, 0.44444444, 0.5],\n","'answer_helpful':\n","[1., 0.88888889, 0.77777778, 0.83333333, 0.66666667, 0.55555556, 0.33333333, 0.44444444, 0.5],\n","'answer_level_of_information':\n","[0.66666667, 0.55555556, 0.33333333, 0.77777778, 0.5, 0.83333333, 1., 0.44444444, 0.88888889],\n","'answer_plausible':\n","[1., 0.88888889, 0.83333333, 0.66666667, 0.77777778, 0.33333333, 0.5, 0.55555556, 0.44444444],\n","'answer_relevance':\n","[1., 0.88888889, 0.66666667, 0.77777778, 0.83333333, 0.44444444, 0.55555556, 0.33333333, 0.5],\n","'answer_satisfaction':\n","[0.8, 0.66666667, 0.73333333, 0.86666667, 0.26666667, 0.53333333, 0.6, 1., 0.9, 0.93333333, 0.5, 0.7, 0.4, 0.2, 0.46666667, 0.33333333, 0.3],\n","'answer_type_instructions':\n","[1., 0., 0.66666667, 0.33333333, 0.5],\n","'answer_type_procedure':\n","[0., 0.33333333, 0.66666667, 1., 0.5],\n","'answer_type_reason_explanation':\n","[0., 0.66666667, 1., 0.33333333, 0.5],\n","'answer_well_written':\n","[1., 0.88888889, 0.77777778, 0.83333333, 0.66666667, 0.5, 0.55555556, 0.44444444, 0.33333333]\n","}"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jDEt4gCorerF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":176},"outputId":"83b7ffae-fa26-49f2-9260-60d1c906b8f2","executionInfo":{"status":"ok","timestamp":1580207044226,"user_tz":-540,"elapsed":1002,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["dict_target_class['answer_relevance']"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.0,\n"," 0.88888889,\n"," 0.66666667,\n"," 0.77777778,\n"," 0.83333333,\n"," 0.44444444,\n"," 0.55555556,\n"," 0.33333333,\n"," 0.5]"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"IxFBVkm6qQKR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"ab34b5e6-a44a-4930-bb41-89d12f5858fd","executionInfo":{"status":"ok","timestamp":1580207058676,"user_tz":-540,"elapsed":678,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["x = 0.5\n","\n","for i, val in enumerate(dict_target_class['answer_relevance']):\n","    dis = abs(val-x)\n","    if i==0:\n","        best_class = val\n","        dis_closest = dis\n","    else:\n","       if dis < dis_closest:\n","          best_class = val\n","          dis_closest = dis\n","\n","print(best_class)\n","print(dis_closest)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["0.5\n","0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FXS1TBXIs6Qi","colab_type":"code","colab":{}},"source":["def closest_class(x, col):\n","    for i, val in enumerate(dict_target_class[col]):\n","        dis = abs(val-x)\n","        if i==0:\n","            best_class = val\n","            dis_closest = dis\n","        else:\n","          if dis < dis_closest:\n","              best_class = val\n","              dis_closest = dis\n","    \n","    return best_class"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tng9HVvOqK5d","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":230},"outputId":"955fd9e9-0bed-4b74-d13a-186759fcc54d","executionInfo":{"status":"ok","timestamp":1580207382904,"user_tz":-540,"elapsed":709,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["sub['answer_relevance'].apply(closest_class, col='answer_relevance')"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0.333333\n","1      0.333333\n","2      0.333333\n","3      0.333333\n","4      0.333333\n","         ...   \n","471    1.000000\n","472    1.000000\n","473    1.000000\n","474    1.000000\n","475    1.000000\n","Name: answer_relevance, Length: 476, dtype: float64"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"ei37P47bmkky","colab_type":"code","colab":{}},"source":["def closest_class(x, col):\n","    for i, val in enumerate(dict_target_class[col]):\n","        dis = abs(val-x)\n","        if i==0:\n","            best_class = val\n","            dis_closest = dis\n","        else:\n","          if dis < dis_closest:\n","              best_class = val\n","              dis_closest = dis\n","    \n","    return best_class\n","\n","\n","for col in target_columns:\n","    sub[col] = sub[col].apply(closest_class, col=col)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IRKfIkaFmkCZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":430},"outputId":"008d3adb-2dbd-492d-93e3-d4b2aab9fcee","executionInfo":{"status":"ok","timestamp":1580207454229,"user_tz":-540,"elapsed":772,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["sub"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>qa_id</th>\n","      <th>question_asker_intent_understanding</th>\n","      <th>question_body_critical</th>\n","      <th>question_conversational</th>\n","      <th>question_expect_short_answer</th>\n","      <th>question_fact_seeking</th>\n","      <th>question_has_commonly_accepted_answer</th>\n","      <th>question_interestingness_others</th>\n","      <th>question_interestingness_self</th>\n","      <th>question_multi_intent</th>\n","      <th>question_not_really_a_question</th>\n","      <th>question_opinion_seeking</th>\n","      <th>question_type_choice</th>\n","      <th>question_type_compare</th>\n","      <th>question_type_consequence</th>\n","      <th>question_type_definition</th>\n","      <th>question_type_entity</th>\n","      <th>question_type_instructions</th>\n","      <th>question_type_procedure</th>\n","      <th>question_type_reason_explanation</th>\n","      <th>question_type_spelling</th>\n","      <th>question_well_written</th>\n","      <th>answer_helpful</th>\n","      <th>answer_level_of_information</th>\n","      <th>answer_plausible</th>\n","      <th>answer_relevance</th>\n","      <th>answer_satisfaction</th>\n","      <th>answer_type_instructions</th>\n","      <th>answer_type_procedure</th>\n","      <th>answer_type_reason_explanation</th>\n","      <th>answer_well_written</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>70</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>132</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>200</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>471</th>\n","      <td>9569</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>472</th>\n","      <td>9590</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>473</th>\n","      <td>9597</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>474</th>\n","      <td>9623</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>475</th>\n","      <td>9640</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>476 rows × 31 columns</p>\n","</div>"],"text/plain":["     qa_id  ...  answer_well_written\n","0       39  ...             0.333333\n","1       46  ...             0.333333\n","2       70  ...             0.333333\n","3      132  ...             0.333333\n","4      200  ...             0.333333\n","..     ...  ...                  ...\n","471   9569  ...             1.000000\n","472   9590  ...             1.000000\n","473   9597  ...             1.000000\n","474   9623  ...             1.000000\n","475   9640  ...             1.000000\n","\n","[476 rows x 31 columns]"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"7wcnjW3B50RN","colab_type":"text"},"source":["## Preprocessing"]},{"cell_type":"code","metadata":{"id":"uCz94eLb5_a4","colab_type":"code","colab":{}},"source":["import re\n","from flashtext import KeywordProcessor"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"msIjfP-V59i-","colab_type":"code","colab":{}},"source":["PUNCTS = {\n","            '》', '〞', '¢', '‹', '╦', '║', '♪', 'Ø', '╩', '\\\\', '★', '＋', 'ï', '<', '?', '％', '+', '„', 'α', '*', '〰', '｟', '¹', '●', '〗', ']', '▾', '■', '〙', '↓', '´', '【', 'ᴵ',\n","            '\"', '）', '｀', '│', '¤', '²', '‡', '¿', '–', '」', '╔', '〾', '%', '¾', '←', '〔', '＿', '’', '-', ':', '‧', '｛', 'β', '（', '─', 'à', 'â', '､', '•', '；', '☆', '／', 'π',\n","            'é', '╗', '＾', '▪', ',', '►', '/', '〚', '¶', '♦', '™', '}', '″', '＂', '『', '▬', '±', '«', '“', '÷', '×', '^', '!', '╣', '▲', '・', '░', '′', '〝', '‛', '√', ';', '】', '▼',\n","            '.', '~', '`', '。', 'ə', '］', '，', '{', '～', '！', '†', '‘', '﹏', '═', '｣', '〕', '〜', '＼', '▒', '＄', '♥', '〛', '≤', '∞', '_', '[', '＆', '→', '»', '－', '＝', '§', '⋅', \n","            '▓', '&', 'Â', '＞', '〃', '|', '¦', '—', '╚', '〖', '―', '¸', '³', '®', '｠', '¨', '‟', '＊', '£', '#', 'Ã', \"'\", '▀', '·', '？', '、', '█', '”', '＃', '⊕', '=', '〟', '½', '』',\n","            '［', '$', ')', 'θ', '@', '›', '＠', '｝', '¬', '…', '¼', '：', '¥', '❤', '€', '−', '＜', '(', '〘', '▄', '＇', '>', '₤', '₹', '∅', 'è', '〿', '「', '©', '｢', '∙', '°', '｜', '¡', \n","            '↑', 'º', '¯', '♫', '#'\n","          }\n","\n","\n","mispell_dict = {\"aren't\" : \"are not\", \"can't\" : \"cannot\", \"couldn't\" : \"could not\",\n","\"couldnt\" : \"could not\", \"didn't\" : \"did not\", \"doesn't\" : \"does not\",\n","\"doesnt\" : \"does not\", \"don't\" : \"do not\", \"hadn't\" : \"had not\", \"hasn't\" : \"has not\",\n","\"haven't\" : \"have not\", \"havent\" : \"have not\", \"he'd\" : \"he would\", \"he'll\" : \"he will\", \"he's\" : \"he is\", \"i'd\" : \"I would\",\n","\"i'd\" : \"I had\", \"i'll\" : \"I will\", \"i'm\" : \"I am\", \"isn't\" : \"is not\", \"it's\" : \"it is\",\n","\"it'll\":\"it will\", \"i've\" : \"I have\", \"let's\" : \"let us\", \"mightn't\" : \"might not\", \"mustn't\" : \"must not\", \n","\"shan't\" : \"shall not\", \"she'd\" : \"she would\", \"she'll\" : \"she will\", \"she's\" : \"she is\", \"shouldn't\" : \"should not\", \"shouldnt\" : \"should not\",\n","\"that's\" : \"that is\", \"thats\" : \"that is\", \"there's\" : \"there is\", \"theres\" : \"there is\", \"they'd\" : \"they would\", \"they'll\" : \"they will\",\n","\"they're\" : \"they are\", \"theyre\":  \"they are\", \"they've\" : \"they have\", \"we'd\" : \"we would\", \"we're\" : \"we are\", \"weren't\" : \"were not\",\n","\"we've\" : \"we have\", \"what'll\" : \"what will\", \"what're\" : \"what are\", \"what's\" : \"what is\", \"what've\" : \"what have\", \"where's\" : \"where is\",\n","\"who'd\" : \"who would\", \"who'll\" : \"who will\", \"who're\" : \"who are\", \"who's\" : \"who is\", \"who've\" : \"who have\", \"won't\" : \"will not\", \"wouldn't\" : \"would not\", \"you'd\" : \"you would\",\n","\"you'll\" : \"you will\", \"you're\" : \"you are\", \"you've\" : \"you have\", \"'re\": \" are\", \"wasn't\": \"was not\", \"we'll\":\" will\", \"didn't\": \"did not\", \"tryin'\":\"trying\"}\n","\n","\n","kp = KeywordProcessor(case_sensitive=True)\n","for k, v in mispell_dict.items():\n","    kp.add_keyword(k, v)\n","\n","def clean_punct(text):\n","    text = str(text)\n","    for punct in PUNCTS:\n","        text = text.replace(punct, ' {} '.format(punct))\n","    return text\n","\n","\n","def preprocessing(text):\n","    text = text.lower()\n","    text = re.sub(r'(\\&lt)|(\\&gt)', ' ', text)\n","    \n","    text = re.sub(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', ' url ', text)\n","    text = kp.replace_keywords(text)\n","    text = clean_punct(text)\n","    text = re.sub(r'\\n\\r', ' ', text)\n","    text = re.sub(r'\\s{2,}', ' ', text)\n","    \n","    return text"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"f6II7BIU5zLS","colab_type":"code","colab":{}},"source":["category_list = ['CULTURE', 'LIFE_ARTS', 'SCIENCE', 'STACKOVERFLOW', 'TECHNOLOGY']\n","\n","host_list = ['academia.stackexchange.com', 'android.stackexchange.com',\n","       'anime.stackexchange.com', 'apple.stackexchange.com',\n","       'askubuntu.com', 'bicycles.stackexchange.com',\n","       'biology.stackexchange.com', 'blender.stackexchange.com',\n","       'boardgames.stackexchange.com', 'chemistry.stackexchange.com',\n","       'christianity.stackexchange.com', 'codereview.stackexchange.com',\n","       'cooking.stackexchange.com', 'crypto.stackexchange.com',\n","       'cs.stackexchange.com', 'dba.stackexchange.com',\n","       'diy.stackexchange.com', 'drupal.stackexchange.com',\n","       'dsp.stackexchange.com', 'electronics.stackexchange.com',\n","       'ell.stackexchange.com', 'english.stackexchange.com',\n","       'expressionengine.stackexchange.com', 'gamedev.stackexchange.com',\n","       'gaming.stackexchange.com', 'gis.stackexchange.com',\n","       'graphicdesign.stackexchange.com', 'judaism.stackexchange.com',\n","       'magento.stackexchange.com', 'math.stackexchange.com',\n","       'mathematica.stackexchange.com', 'mathoverflow.net',\n","       'mechanics.stackexchange.com', 'meta.askubuntu.com',\n","       'meta.christianity.stackexchange.com',\n","       'meta.codereview.stackexchange.com', 'meta.math.stackexchange.com',\n","       'meta.stackexchange.com', 'meta.superuser.com',\n","       'money.stackexchange.com', 'movies.stackexchange.com',\n","       'music.stackexchange.com', 'photo.stackexchange.com',\n","       'physics.stackexchange.com', 'programmers.stackexchange.com',\n","       'raspberrypi.stackexchange.com', 'robotics.stackexchange.com',\n","       'rpg.stackexchange.com', 'salesforce.stackexchange.com',\n","       'scifi.stackexchange.com', 'security.stackexchange.com',\n","       'serverfault.com', 'sharepoint.stackexchange.com',\n","       'softwarerecs.stackexchange.com', 'stackoverflow.com',\n","       'stats.stackexchange.com', 'superuser.com',\n","       'tex.stackexchange.com', 'travel.stackexchange.com',\n","       'unix.stackexchange.com', 'ux.stackexchange.com',\n","       'webapps.stackexchange.com', 'webmasters.stackexchange.com',\n","       'wordpress.stackexchange.com']"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"L7Z7Mc9zsWaq","colab_type":"text"},"source":["## Model"]},{"cell_type":"code","metadata":{"id":"ODCKgUJ6sWML","colab_type":"code","colab":{}},"source":["class BERTBaseUncased(nn.Module):\n","    def __init__(self, bert_path):\n","        super(BERTBaseUncased, self).__init__()\n","        self.bert_path = bert_path\n","        self.bert = transformers.BertModel.from_pretrained(self.bert_path)\n","        self.bert_drop = nn.Dropout(0.3)\n","        self.out = nn.Linear(768, 30)\n","\n","    def farward(self, ids, mask, token_type_ids):\n","        o1, o2 = self.bert(input_ids=ids, attention_mask=mask, token_type_ids=token_type_ids)\n","        bo = self.bert_drop(o2)\n","        return self.out(bo)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"JZfbbxkztVCb","colab_type":"code","colab":{}},"source":["MAX_LEN = 512\n","\n","class BERTDataset(torch.utils.data.Dataset):\n","    def __init__(self, df, train_mode=True, labeled=True):\n","        self.df = df\n","        self.train_mode = train_mode\n","        self.labeled = labeled\n","        self.max_len = MAX_LEN\n","\n","        #self.tokenizer = BertTokenizer.from_pretrained(BERT_DIR+'/bert-base-uncased')\n","        #self.tokenizer = BertTokenizer.from_pretrained('../input/bert-base-uncased/')\n","        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","    \n","    def __len__(self):\n","        return len(self.df)\n","    \n","    def __getitem__(self, index):\n","        row = self.df.iloc[index]\n","        question_title = str(row.question_title)\n","        question_body = str(row.question_body)\n","        answer = str(row.answer)\n","\n","        inputs = self.tokenizer.encode_plus(\n","            question_title + \" \" + question_body,\n","            answer,\n","            add_special_tokens=True,\n","            max_length=self.max_len\n","        )\n","\n","        ids = inputs['input_ids']\n","        token_type_ids = inputs['token_type_ids']\n","        mask = inputs['attention_mask']\n","\n","        padding_len = self.max_len - len(ids)\n","        ids = ids + ([0]*padding_len)\n","        token_type_ids = token_type_ids + ([0]*padding_len)\n","        mask = mask + ([0]*padding_len)\n","\n","        if self.labeled:\n","            targets = self.get_label(row)\n","            return  {\n","                'ids': torch.tensor(ids, dtype=torch.long),\n","                'mask': torch.tensor(mask, dtype=torch.long),\n","                'token_type_ids': torch.tensor(ids, dtype=torch.long),\n","                'targets': torch.tensor(targets, dtype=torch.float)\n","            }\n","        else:\n","            return  {\n","                'ids': torch.tensor(ids, dtype=torch.long),\n","                'mask': torch.tensor(mask, dtype=torch.long),\n","                'token_type_ids': torch.tensor(ids, dtype=torch.long),\n","            }\n","    \n","    def get_label(self, row):\n","        return torch.tensor(row[target_columns].values.astype(np.float32))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"usMEhyGcsV8L","colab_type":"code","colab":{}},"source":["def loss_fn(outputs, targets):\n","    return nn.BCEWithLogitsLoss(outputs, targets)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"d0CNF_RusVsv","colab_type":"code","colab":{}},"source":["def train_loop_fn(data_loader, model, optimizer, device, scheduler=None):\n","    model.train()\n","    for bi, d in enumerate(tqdm(data_loader)):\n","        ids = d['ids'].to(device)\n","        mask = d['mask'].to(device)\n","        token_type_ids = d['token_type_ids'].to(device)\n","        targets = d['targets'].to(device)\n","\n","        optimizer.zero_grad()\n","        outputs = model(ids, mask, token_type_ids)\n","        loss = loss_fn(outputs, targets)\n","        loss.backward()\n","        optimizer.step()\n","        if scheduler is not None:\n","            scheduler.step()\n","        \n","        torch.cuda.empty_cache()\n","        gc.collect()\n","\n","def eval_loop_fn(data_loader, model, device):\n","    model.eval()\n","    fin_targets = []\n","    fin_outputs = [] \n","    for bi, d in enumerate(tqdm(data_loader)):\n","        ids = d['ids'].to(device)\n","        mask = d['mask'].to(device)\n","        token_type_ids = d['token_type_ids'].to(device)\n","        targets = d['targets'].to(device)\n","\n","        outputs = model(ids, mask, token_type_ids)\n","        loss = loss_fn(outputs, targets)\n","\n","        fin_targets.append(targets.cpu().detach().numpy())\n","        fin_outputs.append(outputs.cpu().detach().numpy())\n","\n","        torch.cuda.empty_cache()\n","        gc.collect()\n","\n","    return np.vstack(fin_outputs), np.vstack(fin_targets)\n"," "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lwrFcmLbsVRf","colab_type":"code","colab":{}},"source":["def get_train_val_loaders(batch_size=4, val_batch_size=4, ifold=0):\n","    df = pd.read_csv(f'{DATA_DIR}/train.csv').fillna('none')\n","\n","    # cleaning\n","    df['question_title'] = df['question_title'].apply(lambda x : preprocessing(x))\n","    df['question_body'] = df['question_body'].apply(lambda x : preprocessing(x))\n","    df['answer'] = df['answer'].apply(lambda x : preprocessing(x))\n","    \n","    # label encode\n","    le_category = LabelEncoder()\n","    le_category.fit(category_list)\n","    for c in set(df.category):\n","        if c not in category_list:\n","            df.category = df.category.replace(c, np.nan)\n","            df.category = df.category.fillna(train.category.mode()[0])\n","    df.category = le_category.transform(df.category)\n","\n","    \n","    le_host = LabelEncoder()\n","    le_host.fit(host_list)\n","    for c in set(df.host):\n","        if c not in host_list:\n","            df.host = df.host.replace(c, np.nan)\n","            df.host = df.host.fillna(train.host.mode()[0])\n","    df.host = le_host.transform(df.host)\n","\n","\n","    df = shuffle(df, random_state=1234)\n","    gkf = GroupKFold(n_splits=5).split(X=df.question_body, groups=df.question_body)\n","    for fold, (train_idx, valid_idx) in enumerate(gkf):\n","        if fold == ifold:\n","            df_train = df.iloc[train_idx]\n","            df_val = df.iloc[valid_idx]\n","            break\n","\n","    print('train', df_train.shape)\n","    print('val', df_val.shape)\n","\n","    ds_train = BERTDataset(df_train)\n","    train_loader = torch.utils.data.DataLoader(ds_train, batch_size=batch_size, shuffle=True, num_workers=0, drop_last=True)\n","\n","    ds_val = BERTDataset(df_val, train_mode=False)\n","    val_loader = torch.utils.data.DataLoader(ds_val, batch_size=val_batch_size, shuffle=False, num_workers=0, drop_last=False)\n","\n","    return train_loader, val_loader\n","\n","\n","def get_test_loader(batch_size=4):\n","    df = pd.read_csv(f'{DATA_DIR}/test.csv').fillna('none')\n","\n","    # cleaning\n","    df['question_title'] = df['question_title'].apply(lambda x : preprocessing(x))\n","    df['question_body'] = df['question_body'].apply(lambda x : preprocessing(x))\n","    df['answer'] = df['answer'].apply(lambda x : preprocessing(x))\n","    \n","    # label encode\n","    le_category = LabelEncoder()\n","    le_category.fit(category_list)\n","    for c in set(df.category):\n","        if c not in category_list:\n","            df.category = df.category.replace(c, np.nan)\n","            df.category = df.category.fillna(train.category.mode()[0])\n","    df.category = le_category.transform(df.category)\n","    \n","    le_host = LabelEncoder()\n","    le_host.fit(host_list)\n","    for c in set(df.host):\n","        if c not in host_list:\n","            df.host = df.host.replace(c, np.nan)\n","            df.host = df.host.fillna(train.host.mode()[0])\n","    df.host = le_host.transform(df.host)\n","\n","\n","    ds_test = BERTDataset(df, train_mode=False, labeled=False)\n","    loader = torch.utils.data.DataLoader(ds_test, batch_size=batch_size, shuffle=False, num_workers=0, collate_fn=ds_test.collate_fn, drop_last=False)\n","    loader.num = len(df)\n","    \n","    return loader"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FBBS4Ewl2_M-","colab_type":"code","colab":{}},"source":["BATCH_SIZE = 6\n","EPOCHS = 4\n","\n","def run():\n","    \n","    for fold in range(config.fold):\n","        print('---%d-Fold---'%(fold+1))\n","\n","        model = BERTBaseUncased(bert_path='bert-base-uncased')\n","        optimizer = AdamW(model.parameters(), lr=3e-5)\n","        scheduler = get_linear_schedule_with_warmup(\n","            optimizer,\n","            num_warmup_steps=0,\n","            num_training_steps=int(len(train) / BATCH_SIZE * EPOCHS)\n","        )\n","            \n","        for epoch in range(config.epochs):\n","            \n","            torch.cuda.empty_cache()\n","            start_time   = time.time()\n","            \n","            train_loader, val_loader = get_train_val_loaders(batch_size=config.batch_size, val_batch_size=config.batch_size, ifold=fold)\n","            train_loop_fn(train_loader, model, optimizer, device, scheduler=None)\n","            eval_loop_fn(val_loader, model, device)\n","      \n","            del train_loader, val_loader\n","            torch.cuda.empty_cache()\n","            gc.collect()\n","        \n","        torch.save(model.state_dict(), 'best_param_score_{}_{}.pt'.format(config.name ,fold+1))   "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"igQLjv7X2-_C","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":801},"outputId":"9b9b8754-ceeb-4ef5-87d8-67e36717fa05","executionInfo":{"status":"error","timestamp":1580179346302,"user_tz":-540,"elapsed":23957,"user":{"displayName":"m f","photoUrl":"","userId":"10272771420966758066"}}},"source":["run()"],"execution_count":24,"outputs":[{"output_type":"stream","text":["---1-Fold---\n","train (4863, 41)\n","val (1216, 41)\n"],"name":"stdout"},{"output_type":"stream","text":["\r  0%|          | 0/607 [00:00<?, ?it/s]/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:45: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n","\n"],"name":"stderr"},{"output_type":"error","ename":"NotImplementedError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-ec9775ede022>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-23-ae7bc2330558>\u001b[0m in \u001b[0;36mrun\u001b[0;34m()\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m             \u001b[0mtrain_loader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_loader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_train_val_loaders\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_batch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mifold\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfold\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m             \u001b[0mtrain_loop_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_loader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptimizer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdevice\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscheduler\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m             \u001b[0meval_loop_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_loader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-21-40bbe3fb2c80>\u001b[0m in \u001b[0;36mtrain_loop_fn\u001b[0;34m(data_loader, model, optimizer, device, scheduler)\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m         \u001b[0moptimizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzero_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m         \u001b[0moutputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mids\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtoken_type_ids\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m         \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mloss_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtargets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m         \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    539\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_slow_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    540\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 541\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    542\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mhook\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_forward_hooks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    543\u001b[0m             \u001b[0mhook_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, *input)\u001b[0m\n\u001b[1;32m     95\u001b[0m             \u001b[0mregistered\u001b[0m \u001b[0mhooks\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mlatter\u001b[0m \u001b[0msilently\u001b[0m \u001b[0mignores\u001b[0m \u001b[0mthem\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m         \"\"\"\n\u001b[0;32m---> 97\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     98\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mregister_buffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNotImplementedError\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"ExkPXQdU7FyW","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}